{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","goodsList","this","setState","prevsTate","reorderedGoods","goods","visible","sort","word1","word2","LENGTH","length","ALPHABET","localeCompare","reverse","getReorderedGoods","className","type","onClick","setsortType","toggleIsReversed","reset","map","goodSecond","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAMKA,E,kGAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWL,IAAMC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCK,IAAMC,EAAb,4MACEC,MAAe,CACbC,SAAUJ,EAASK,KACnBC,YAAY,EACZC,UAAWN,GAJf,iDAOE,SAAYG,GACVI,KAAKC,SAAS,CACZL,aAGFI,KAAKC,SAAS,CACZH,YAAY,MAblB,8BAiBE,SAAiBI,GACfF,KAAKC,UAAS,iBAAO,CAAEH,WAAYI,QAlBvC,mBAqBE,WACEF,KAAKC,SAAS,CACZL,SAAUJ,EAASK,KAAMC,YAAY,MAvB3C,oBA2BE,WAA2B,IAAD,OAClBK,EA3DV,SACEC,EADF,GAGc,IADVR,EACS,EADTA,SAAUE,EACD,EADCA,WAENO,EAAO,YAAOD,GAkBpB,OAhBAC,EAAQC,MAAK,SAACC,EAAOC,GACnB,OAAQZ,GACN,KAAKJ,EAASiB,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKlB,EAASmB,SACZ,OAAOJ,EAAMK,cAAcJ,GAC7B,QACE,OAAO,OAIM,IAAfV,GACFO,EAAQQ,UAGHR,EAqCkBS,CAAkBd,KAAKL,MAAMI,UAAWC,KAAKL,OAEpE,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,KAAKL,MAAMC,WAAaJ,EAASmB,SAAW,WAAa,IACtFM,QAAS,WACP,EAAKC,YAAY1B,EAASmB,WAJ9B,iCAUA,wBACEK,KAAK,SACLD,UAAS,4BAAuBf,KAAKL,MAAMC,WAAaJ,EAASiB,OAAS,WAAa,IACvFQ,QAAS,WACP,EAAKC,YAAY1B,EAASiB,SAJ9B,4BAUA,wBACEO,KAAK,SACLD,UAAWf,KAAKL,MAAMG,WAClB,oBACA,6BACJmB,QAAS,WACP,EAAKE,kBAAkB,EAAKxB,MAAMG,aANtC,sBAY2B,IAA1BE,KAAKL,MAAMG,YACTE,KAAKL,MAAMC,WAAaJ,EAASK,KAEhC,wBACEmB,KAAK,SACLD,UAAU,4BACVE,QAAS,WACP,EAAKG,SAJT,mBAUA,QAGN,6BACE,6BACIjB,EAAekB,KAAI,SAACC,GACpB,OACE,oBAAI,UAAQ,OAAZ,SAAqCA,GAAbA,iBArFxC,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6718cd2.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\ntype Props = {};\n\nenum SortType {\n  NONE = 0,\n  ALPHABET = 1,\n  LENGTH = 2,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string [] {\n  const visible = [...goods];\n\n  visible.sort((word1, word2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return word1.length - word2.length;\n\n      case SortType.ALPHABET:\n        return word1.localeCompare(word2);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed === true) {\n    visible.reverse();\n  }\n\n  return visible;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  goodsList: string[],\n};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    sortType: SortType.NONE,\n    isReversed: false,\n    goodsList: goodsFromServer,\n  };\n\n  setsortType(sortType: SortType) {\n    this.setState({\n      sortType,\n    });\n\n    this.setState({\n      isReversed: false,\n    });\n  }\n\n  toggleIsReversed(prevsTate: boolean) {\n    this.setState(() => ({ isReversed: prevsTate }));\n  }\n\n  reset() {\n    this.setState({\n      sortType: SortType.NONE, isReversed: false,\n    });\n  }\n\n  render(): React.ReactNode {\n    const reorderedGoods = getReorderedGoods(this.state.goodsList, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n            onClick={() => {\n              this.setsortType(SortType.ALPHABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n            onClick={() => {\n              this.setsortType(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed\n              ? 'button is-warning'\n              : 'button is-success is-light'}\n            onClick={() => {\n              this.toggleIsReversed(!this.state.isReversed);\n            }}\n          >\n            Reverse\n          </button>\n\n          {this.state.isReversed === true\n          || this.state.sortType !== SortType.NONE\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.reset();\n                }}\n              >\n                Reset\n              </button>\n            )\n            : null}\n        </div>\n\n        <ul>\n          <ul>\n            { reorderedGoods.map((goodSecond) => {\n              return (\n                <li data-cy=\"Good\" key={goodSecond}>{goodSecond}</li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}